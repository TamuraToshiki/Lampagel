//======================================================================
// IcePillar.cs
//======================================================================
// 開発履歴
//
// 2022/04/21 author：小椋駿 製作開始
//
//======================================================================

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[DisallowMultipleComponent]

public class IcePillar : MonoBehaviour
{
    // 当たり判定用キューブ
    GameObject cube;

    EnemyBase enemyBase;
    GameObject player;

    [SerializeField] private GameObject Circle;

    // サークルサイズ
    [Header("予測サークルのサイズ")] [SerializeField] private Vector3 vCircleSize = new Vector3(0.5f, 0.5f, 0.5f);

    // 氷柱サイズ
    [Header("氷柱サイズ")] [SerializeField] private Vector3 vFireSize = new Vector3(0.5f, 3.0f, 0.5f);

    private void Start()
    {
        enemyBase = GetComponent<EnemyBase>();
        player = enemyBase.player;
    }

    private void FirePillarAttack()
    {
        // 当たり判定用キューブ
        cube = GameObject.CreatePrimitive(PrimitiveType.Cube);

        // 当たり判定用キューブを非表示
        cube.GetComponent<MeshRenderer>().enabled = false;

        // 氷柱のサイズ、座標、角度設定
        cube.transform.localScale = vFireSize;
        transform.Rotate(-90.0f, 0.0f, 0.0f);
        cube.transform.position = player.transform.position;

        // 氷柱コンポーネント調整

        // 攻撃サークルの大きさ変更
        Circle.transform.localScale = vCircleSize;

        // Fire.cs追加
        cube.AddComponent<Ice>();

        // 攻撃サークルセット
        cube.GetComponent<Ice>().SetCircle(Circle);

        // 敵情報セット
        cube.GetComponent<Ice>().enemy = gameObject;

        // プレイヤー情報セッ
        cube.GetComponent<Fire>().player = player;
    }
}

