//======================================================================
// Pause.cs
//======================================================================
// 開発履歴
//
// 2022/03/23 author：奥田達磨 ポーズ機能実装
// 2022/03/25 author：奥田達磨 ポーズメニュー・レベルアップメニュー機能追加 
// 2022/04/25 author：奥田達磨 ポーズバグ修正 
// 2022/04/21 author：竹尾晃史郎 アイテム決定機能追加（ダブり発生どうしようか）
//
//======================================================================
using UnityEngine;
using System.Collections.Generic;
using UnityEngine.UI;
using System.Collections;

public class Pause : MonoBehaviour
{

    //ポーズ切り替え用フラグ
    [SerializeField] int  nMenuFrame;
    [SerializeField] bool bPause;
    [SerializeField] bool bResume;
    [SerializeField] bool bLevelUpPause;
    [SerializeField] GameObject gPauseMenu;
    [SerializeField] GameObject gLevelUpPause;
    [SerializeField] List<GameObject> gPauseMenuChoice;
    [SerializeField] List<GameObject> gLevelUpMenuChoice;

    // 4/21 追加（竹）
    [SerializeField] ItemManager itemManager;
    public Image SelectItemIcon_L, SelectItemIcon_C, SelectItemIcon_R;
    int setItem_L = 0, setItem_C = 0, setItem_R = 0;
    bool bLotteryComp = false;

    bool nowExecCoroutine_ = false;

    [SerializeField] SoundManager soundManager;

    void Start()
    {
        //初期化
        nMenuFrame = 0;
        bPause = false;
        bLevelUpPause = false;
        bResume = true;

        DontDestroyOnLoad(this.gameObject);
        
    }
    void Update()
    {
        //Pキー押したら
        //===============================
        if (Input.GetKeyDown(KeyCode.P)||(Input.GetKeyDown("joystick button 7")))
        {
            if (bResume)
            {
               
                SetbPause(true);
            }
            else
            {
                SetbPause(false);
            }
        }
        //ポーズメニュー
        if (bPause)
        {
            PauseMenu(bPause);
        }
        else
        {
            PauseMenu(bPause);
        }
        //-------------------------------------

        //Lキー押したら
        //=====================================
        if (Input.GetKeyDown(KeyCode.L))
        {
            if (bResume)
            {
                SetbLevelPause(true);
            }
            else
            {
                SetbLevelPause(false);
            }
        }
        //レベルアップ時のポーズメニュー
        if(bLevelUpPause)
        {
            // 4/21 追加
            //itemManager
            levelUpPause(bLevelUpPause);
        }
        else
        {
            levelUpPause(bLevelUpPause);
        }
        //------------------------------------------ 

        

        //============================================
        //バグ防止（2つのフラグが同じになることを防ぐ）
        //============================================
        if (bPause && bResume)
            SetbResume(false);
        if (!bPause && !bResume)
            SetbResume(true);
        if (bResume && bLevelUpPause)
            SetbResume(false);
        //if (!bResume && !bLevelUpPause)
        //    SetbResume(true);
        if (bPause && bLevelUpPause)
            SetbPause(false);
        //if (!bPause && !bLevelUpPause)
        //    SetbResume(true);
        //--------------------------------------------
        if (bLevelUpPause || bPause)
        {
            Stop();
        }
        else
        {
            Resume();
        }

    }
    
    //時間停止
    private void Stop()
    {
        Time.timeScale = 0;  // 時間停止
    }

    //再開
    private void Resume()
    {
        Time.timeScale = 1;  // 再開
    }

    private void SetbPause(bool b)
    {
        bPause = b;
    }
    public void SetbLevelPause(bool b)
    {
        bLevelUpPause = b;
    }
    private void SetbResume(bool b)
    {
        bResume = b;
    }
    //ポーズメニュー
    public void PauseMenu(bool b)
    {
        
        gPauseMenu.SetActive(b);
        if (b == true)
        {
            if ((Input.GetKeyDown(KeyCode.UpArrow) || Input.GetAxis("XBox_Dpad_Vertical") > 0) && nMenuFrame == 1)
            {
                soundManager.Play_SystemSelect(this.gameObject);
                nMenuFrame++;
                if (nMenuFrame > 1)
                    nMenuFrame = 0;
            }
            if ((Input.GetKeyDown(KeyCode.DownArrow) || Input.GetAxis("XBox_Dpad_Vertical") < 0) && nMenuFrame == 0)
            {
                soundManager.Play_SystemSelect(this.gameObject);
                nMenuFrame--;
                if (nMenuFrame < 0)
                    nMenuFrame = 1;
            }
            if (nMenuFrame == 0)
            {
                gPauseMenuChoice[nMenuFrame].SetActive(true);
                gPauseMenuChoice[nMenuFrame + 1].SetActive(false);
                if (Input.GetKeyDown(KeyCode.Return) || Input.GetKeyDown("joystick button 0"))
                {
                    soundManager.Play_SystemDecide(this.gameObject);
                    SetbPause(false);
                }
            }
            if (nMenuFrame == 1)
            {
                if (Input.GetKeyDown(KeyCode.Return) || Input.GetKeyDown("joystick button 0"))
                {
                    Debug.Log("ゲームやめますか？");
                    soundManager.Play_SystemDecide(this.gameObject);
                    Application.Quit();
                }
                gPauseMenuChoice[nMenuFrame].SetActive(true);
                gPauseMenuChoice[nMenuFrame - 1].SetActive(false);
            }
        }
        
    }
    //レヴェルアップしたときに呼んでね(テストで一応Lキー押したら動くようにしときます)
    //レベルアップメニュー
    public void levelUpPause(bool b)
    {
        
        gLevelUpPause.SetActive(b);
        if (b == false) return;
        // LVUPしなくてもずっと呼ばれるためif追加（竹尾）
        if (b)
        {
            // アイテム番号割り当て（竹尾）
            if(bLotteryComp == false)
            {
                setItem_L = itemManager.nItemGacha(); // "L" eft
                setItem_C = itemManager.nItemGacha(); // "C" enter
                setItem_R = itemManager.nItemGacha(); // "R" ight

                SelectItemIcon_L.sprite = itemManager.setItemIcon(setItem_L);
                SelectItemIcon_C.sprite = itemManager.setItemIcon(setItem_C);
                SelectItemIcon_R.sprite = itemManager.setItemIcon(setItem_R);

                bLotteryComp = true;
            }
            // ****************************

            if ((Input.GetKeyDown(KeyCode.RightArrow) || Input.GetAxis("XBox_Dpad_Horizon") > 0) && nowExecCoroutine_ == false)
            {
                StartCoroutine(SelectIconMove());
                soundManager.Play_SystemSelect(this.gameObject);
                nMenuFrame++;
                if (nMenuFrame > 2)
                    nMenuFrame = 0;
            }
            if ((Input.GetKeyDown(KeyCode.LeftArrow) || Input.GetAxis("XBox_Dpad_Horizon") < 0)&& nowExecCoroutine_ == false)
            {
                StartCoroutine(SelectIconMove());
                soundManager.Play_SystemSelect(this.gameObject);
                nMenuFrame--;
                if (nMenuFrame < 0)
                    nMenuFrame = 2;
            }
            if (nMenuFrame == 0)
            {
                //Debug.Log("左アイテム選択中");
                
                gLevelUpMenuChoice[nMenuFrame].SetActive(true);
                gLevelUpMenuChoice[nMenuFrame + 1].SetActive(false);
                gLevelUpMenuChoice[nMenuFrame + 2].SetActive(false);

                //決定処理（竹尾）
                if (Input.GetKeyDown(KeyCode.Return) || Input.GetKeyDown("joystick button 0"))
                {
                    soundManager.Play_SystemDecide(this.gameObject);
                    itemManager.nItemCount(setItem_L);
                    SetbLevelPause(false);
                    bLotteryComp = false;
                }
            }
            if (nMenuFrame == 1)
            {
                //Debug.Log("中央アイテム選択中");
                
                gLevelUpMenuChoice[nMenuFrame].SetActive(true);
                gLevelUpMenuChoice[nMenuFrame - 1].SetActive(false);
                gLevelUpMenuChoice[nMenuFrame + 1].SetActive(false);

                //決定処理（竹尾）
                if (Input.GetKeyDown(KeyCode.Return) || Input.GetKeyDown("joystick button 0"))
                {
                    soundManager.Play_SystemDecide(this.gameObject);
                    itemManager.nItemCount(setItem_C);
                    SetbLevelPause(false);
                    bLotteryComp = false;
                }
            }
            if (nMenuFrame == 2)
            {
                //Debug.Log("右アイテム選択中");
                
                gLevelUpMenuChoice[nMenuFrame].SetActive(true);
                gLevelUpMenuChoice[nMenuFrame - 1].SetActive(false);
                gLevelUpMenuChoice[nMenuFrame - 2].SetActive(false);

                //決定処理（竹尾）
                if (Input.GetKeyDown(KeyCode.Return) || Input.GetKeyDown("joystick button 0"))
                {
                    soundManager.Play_SystemDecide(this.gameObject);
                    itemManager.nItemCount(setItem_R);
                    SetbLevelPause(false);
                    bLotteryComp = false;
                }
            }

        }

        IEnumerator SelectIconMove()
        {
            
            nowExecCoroutine_ = true;
            for(int i = 0; i <= 30; i++)
            {
                yield return null;
            }

            
            nowExecCoroutine_ = false;
            
        }

    }
}